import * as events from 'events';
import Promise = require('bluebird');
export declare class PoolMaster extends events.EventEmitter {
    _timeout: any;
    _servers: any;
    _seed: any;
    _maxExponent: any;
    _timeoutError: any;
    _consecutiveFails: any;
    _feed: any;
    _hasPrintWarningLocalhost: any;
    _numAvailableConnections: any;
    _numConnections: any;
    _draining: any;
    _log: any;
    _options: any;
    _discovery: any;
    _indexUnknown: any;
    _index: any;
    _init: any;
    _healthy: any;
    _healthyPools: any;
    _pools: any;
    _line: any;
    _r: any;
    constructor(r: any, options: any);
    emitStatus(): void;
    drain(): Promise<void>;
    getAvailableLength(): any;
    getLength(): any;
    resetBufferParameters(): void;
    getNumAvailableConnections(): number;
    getNumConnections(): number;
    initPool(pool: any): void;
    fetchServers(useSeeds?: any): void;
    deletePool(key: any): void;
    createPool(server: any): void;
    createPoolSettings(globalOptions: any, serverOptions: any, log: any): any;
    handleAllServersResponse(servers: any): void;
    _expandAll(): void;
    getConnection(): any;
    _flushErrors(): void;
    getPools(): any[];
}
